(()=>{"use strict";var e,t,n,r,a,o={485:(e,t,n)=>{n.a(e,(async r=>{n.d(t,{I:()=>b});var a=n(426);e=n.hmd(e);var o=r([a]);a=(o.then?await o:o)[0];let c=0,i=null;function d(){return null!==i&&i.buffer===a.memory.buffer||(i=new Uint8Array(a.memory.buffer)),i}let l=new("undefined"==typeof TextEncoder?(0,e.require)("util").TextEncoder:TextEncoder)("utf-8");const u="function"==typeof l.encodeInto?function(e,t){return l.encodeInto(e,t)}:function(e,t){const n=l.encode(e);return t.set(n),{read:e.length,written:n.length}};function s(e,t,n){if(void 0===n){const n=l.encode(e),r=t(n.length);return d().subarray(r,r+n.length).set(n),c=n.length,r}let r=e.length,a=t(r);const o=d();let i=0;for(;i<r;i++){const t=e.charCodeAt(i);if(t>127)break;o[a+i]=t}if(i!==r){0!==i&&(e=e.slice(i)),a=n(a,r,r=i+3*e.length);const t=d().subarray(a+i,a+r);i+=u(e,t).written}return c=i,a}let f=null;function p(){return null!==f&&f.buffer===a.memory.buffer||(f=new Int32Array(a.memory.buffer)),f}let m=new("undefined"==typeof TextDecoder?(0,e.require)("util").TextDecoder:TextDecoder)("utf-8",{ignoreBOM:!0,fatal:!0});function b(e,t,n){try{const y=a.__wbindgen_add_to_stack_pointer(-16);var r=s(e,a.__wbindgen_malloc,a.__wbindgen_realloc),o=c,i=s(t,a.__wbindgen_malloc,a.__wbindgen_realloc),l=c;a.gen_pow(y,r,o,i,l,n);var u=p()[y/4+0],f=p()[y/4+1];return b=u,h=f,m.decode(d().subarray(b,b+h))}finally{a.__wbindgen_add_to_stack_pointer(16),a.__wbindgen_free(u,f)}var b,h}m.decode()}))},607:(e,t,n)=>{n.a(e,(async e=>{var t=n(485),r=e([t]);t=(r.then?await r:r)[0];var a={string:"6e2a53dbc7d307970d7ba3c0000221722cb74f1c325137251ce8fa5c2240",difficulty_factor:1,salt:"674243647f1c355da8607a8cdda05120d79ca5d1af8b3b49359d056a0a82"},o=[],c=document.getElementById("stats"),i=function(e,t){var n=document.createElement("tr");n.className="data";var r=document.createElement("td");r.innerHTML=e.toString();var a=document.createElement("td");a.innerHTML=t.toString(),n.appendChild(r),n.appendChild(a),c.appendChild(n),o.push({difficulty:e,time:t})};document.getElementById("start").addEventListener("click",(function(e){return d(e)}));var d=function(e){e.preventDefault(),document.getElementById("pre-bench").style.display="none",document.getElementById("bench").style.display="flex";for(var n=1;n<10;n++){var r=5e5*n;a.difficulty_factor=r;var c=performance.now();(0,t.I)(a.salt,a.string,a.difficulty_factor);var d=performance.now();i(r,d-c)}!function(){var e={threads:window.navigator.hardwareConcurrency,oscup:window.navigator.userAgent};console.log(o),console.log(e);var t=document.createElement("div"),n=document.createElement("b");n.innerText="User Agent: ";var r=document.createTextNode(""+e.oscup),a=document.createElement("b");a.innerText="Hardware concurrency: ";var c=document.createTextNode(""+e.threads);t.appendChild(n),t.appendChild(r),t.appendChild(document.createElement("br")),t.appendChild(a),t.appendChild(c),document.getElementById("device-info").appendChild(t)}(),document.getElementById("status").innerHTML="Benchmark finished"}}))},426:(e,t,n)=>{e.exports=n.v(t,e.id,"b08ac87b47bbc78ac8ba")}},c={};function i(e){var t=c[e];if(void 0!==t)return t.exports;var n=c[e]={id:e,loaded:!1,exports:{}};return o[e](n,n.exports,i),n.loaded=!0,n.exports}e="function"==typeof Symbol?Symbol("webpack then"):"__webpack_then__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",n=e=>{e&&(e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},r=e=>!--e.r&&e(),a=(e,t)=>e?e.push(t):r(t),i.a=(o,c,i)=>{var d,l,u,s=i&&[],f=o.exports,p=!0,m=!1,b=(t,n,r)=>{m||(m=!0,n.r+=t.length,t.map(((t,a)=>t[e](n,r))),m=!1)},h=new Promise(((e,t)=>{u=t,l=()=>(e(f),n(s),s=0)}));h[t]=f,h[e]=(e,t)=>{if(p)return r(e);d&&b(d,e,t),a(s,e),h.catch(t)},o.exports=h,c((o=>{if(!o)return l();var c,i;d=(o=>o.map((o=>{if(null!==o&&"object"==typeof o){if(o[e])return o;if(o.then){var c=[];o.then((e=>{i[t]=e,n(c),c=0}));var i={};return i[e]=(e,t)=>(a(c,e),o.catch(t)),i}}var d={};return d[e]=e=>r(e),d[t]=o,d})))(o);var u=new Promise(((e,n)=>{(c=()=>e(i=d.map((e=>e[t])))).r=0,b(d,c,n)}));return c.r?u:i})).then(l,u),p=!1},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.v=(e,t,n,r)=>{var a=fetch(i.p+""+n+".module.wasm");return"function"==typeof WebAssembly.instantiateStreaming?WebAssembly.instantiateStreaming(a,r).then((t=>Object.assign(e,t.instance.exports))):a.then((e=>e.arrayBuffer())).then((e=>WebAssembly.instantiate(e,r))).then((t=>Object.assign(e,t.instance.exports)))},(()=>{var e;i.g.importScripts&&(e=i.g.location+"");var t=i.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=e})(),i(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,